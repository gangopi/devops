---
- name: Ensure dependencies are installed
  package:
    name:
      - curl
      - libselinux-python
    state: installed

- name: Ensure Jenkins repo is installed
  get_url:
    url: "{{ jenkins_repo_url }}"
    dest: /etc/yum.repos.d/jenkins.repo

- name: Add Jenkins repo GPG key
  rpm_key:
    state: present
    key: "{{ jenkins_repo_key_url }}"

- name: Download specific Jenkins version
  get_url:
    url: "{{ jenkins_pkg_url }}/jenkins-{{ jenkins_version }}-1.1.noarch.rpm"
    dest: "{{ jenkins_rpm_location }}"
  when: jenkins_version is defined

- name: Check if we downloaded the specific version of Jenkins
  stat:
    path: "{{ jenkins_rpm_location }}"
  register: specific_version

- name: Install our specific version of Jenkins
  package:
    name: "{{ jenkins_rpm_location }}"
    state: installed
  when: specific_version.stat.exists

- name: Validate Jenkins is installed and register package name
  package:
    name: jenkins
    state: present
  when: not specific_version.stat.exists

- name: Install Jenkins from repository
  package:
    name: jenkins
    state: installed
  when: jenkins_version is undefined

# Update config
- name: Update Jenkins configuration
  lineinfile:
    dest: "{{ jenkins_config_file }}"
    regexp: '^{{ item.config }}='
    line: '{{ item.config }}="{{ item.property }}"'
  with_items: "{{ jenkins_config_changes }}"

# Directory permissions and ownership
- name: Jenkins home directory
  file: path={{ jenkins_home_dir }} state=directory
- name: Directory permissions and ownership
  shell: "{{ item }} {{ jenkins_home_dir }}"
  with_items:
  - "chgrp -R jenkins"
  - "chown -R jenkins:jenkins"
  - "chmod -R 775"
  args:
    warn: false

# Setup SELinux to allow the ports we plan to use
- name: SELinux settings for TCP ports
  seport: ports={{ item }} proto=tcp setype=http_port_t state=present
  with_items:
  - '{{ jenkins_http_port }}'
  - '{{ jenkins_ajp_port }}'
- name: Directory permissions and ownership
  shell: "{{ item }}"
  with_items:
  - "semanage fcontext -a -t 'httpd_cache_t' '{{ jenkins_home_dir }}(/.*)?'"
  - "restorecon -Rv {{ jenkins_home_dir }}"
  - "setsebool -P httpd_builtin_scripting 1"
  args:
    warn: false

# Also setup the firewall to allow the ports we plan to use
- name: IPTABLES settings for TCP ports
  lineinfile:
    dest: /etc/sysconfig/iptables
    regexp: '-A INPUT -p tcp -m tcp --dport {{ item }} -j ACCEPT'
    insertbefore: '-A INPUT -j REJECT --reject-with icmp-host-prohibited'
    line: '-A INPUT -p tcp -m tcp --dport {{ item }} -j ACCEPT'
  with_items:
  - '{{ jenkins_http_port }}'
  - '{{ jenkins_ajp_port }}'

# Restart IPTABLES
- name: Restart IPTABLES service
  command: systemctl restart iptables

# Configure default users
- name: Update Jenkins configuration
  template:
    src: "{{ item }}.j2"
    dest: "{{ jenkins_home_dir }}/{{ item }}"
    group: jenkins
    owner: jenkins
  with_items:
    - 'config.xml'
    - 'credentials.xml'
    - 'hudson.maven.MavenModuleSet.xml'
    - 'hudson.plugins.emailext.ExtendedEmailPublisher.xml'
    - 'hudson.plugins.git.GitSCM.xml'
    - 'hudson.plugins.git.GitTool.xml'
    - 'hudson.tasks.Mailer.xml'
    - 'hudson.tasks.Maven.xml'
    - 'hudson.tasks.Shell.xml'
    - 'hudson.triggers.SCMTrigger.xml'
    - 'jenkins.model.ArtifactManagerConfiguration.xml'
    - 'jenkins.model.DownloadSettings.xml'
    - 'jenkins.model.JenkinsLocationConfiguration.xml'
    - 'jenkins.mvn.GlobalMavenConfig.xml'
    - 'jenkins.security.QueueItemAuthenticatorConfiguration.xml'
    - 'org.jenkinsci.plugins.ansible.AnsibleInstallation.xml'
  notify: Restart Jenkins

# Admin user
- name: User directory
  file:
    path: "{{ jenkins_users_dir }}/{{ jenkins_admin_username }}"
    state: directory
    owner: jenkins
    group: jenkins

# User configuration
- name: Update user configuration
  template:
    src: 'user-config.xml.j2'
    dest: "{{ jenkins_users_dir }}/{{ jenkins_admin_username }}/config.xml"
    group: jenkins
    owner: jenkins
  
# Prevent the warning "Slave To Master Access Control" warning
- name: User directory
  file:
    path: "{{ jenkins_users_dir }}/{{ jenkins_admin_username }}"
    state: directory
    owner: jenkins
    group: jenkins

# User configuration
- name: Update slave-to-master flag
  template:
    src: 'slave-to-master-security-kill-switch.j2'
    dest: "{{ jenkins_home_dir }}/secrets/slave-to-master-security-kill-switch"
    group: jenkins
    owner: jenkins
    mode: 0644

# Start the Jenkins service
- name: Start Jenkins service
  service: name=jenkins state=started enabled=true